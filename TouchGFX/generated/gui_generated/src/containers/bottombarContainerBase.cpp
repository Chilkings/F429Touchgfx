/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/bottombarContainerBase.hpp>
#include <BitmapDatabase.hpp>

bottombarContainerBase::bottombarContainerBase() :
    updateItemCallback(this, &bottombarContainerBase::updateItemCallbackHandler),
    animationSpeedButtonButtonPressedCallback(this, &bottombarContainerBase::animationSpeedButtonButtonPressedCallbackHandler),
    getTransitionInfoCallback(0),
    scrollWheelPressedCallback(0),
    scrollWheelAnimationEndedCallback(0),
    animaitonSpeedPressedCallback(0)
{
    setWidth(800);
    setHeight(150);
    background.setXY(0, 30);
    background.setBitmap(touchgfx::Bitmap(BITMAP_TRANS_BUND_BG_ID));

    transitionSelectionWheel.setPosition(138, 68, 524, 82);
    transitionSelectionWheel.setHorizontal(true);
    transitionSelectionWheel.setCircular(true);
    transitionSelectionWheel.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    transitionSelectionWheel.setSwipeAcceleration(10);
    transitionSelectionWheel.setDragAcceleration(10);
    transitionSelectionWheel.setNumberOfItems(10);
    transitionSelectionWheel.setSelectedItemOffset(220);
    transitionSelectionWheel.setDrawableSize(64, 10);
    transitionSelectionWheel.setDrawables(transitionSelectionWheelListItems, updateItemCallback);
    transitionSelectionWheel.animateToItem(0, 0);

    overlay1.setXY(0, 30);
    overlay1.setBitmap(touchgfx::Bitmap(BITMAP_TRANS_BUND_GRADIENT_OVERLAY_1_ID));

    overlay2.setXY(0, 30);
    overlay2.setBitmap(touchgfx::Bitmap(BITMAP_TRANS_BUND_GRADIENT_OVERLAY_2_ID));

    top.setXY(326, 3);
    top.setBitmap(touchgfx::Bitmap(BITMAP_TRANS_BUND_TAB_ID));

    buttonIndicator.setXY(380, 13);
    buttonIndicator.setBitmap(touchgfx::Bitmap(BITMAP_ICON_TAB_CLOSE_ID));
    buttonIndicator.setWidth(40);
    buttonIndicator.setHeight(40);
    buttonIndicator.setBitmapPosition(11.000f, 15.000f);
    buttonIndicator.setScale(1.000f);
    buttonIndicator.setCameraDistance(1000.000f);
    buttonIndicator.setOrigo(20.000f, 20.000f, 1000.000f);
    buttonIndicator.setCamera(20.000f, 20.000f);
    buttonIndicator.setAngles(0.000f, 0.000f, 0.000f);
    buttonIndicator.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);

    animationSpeedButton.setXY(0, 41);
    animationSpeedButton.setButtonPressedCallback(animationSpeedButtonButtonPressedCallback);

    add(background);
    add(transitionSelectionWheel);
    add(overlay1);
    add(overlay2);
    add(top);
    add(buttonIndicator);
    add(animationSpeedButton);
}

void bottombarContainerBase::initialize()
{
    transitionSelectionWheel.initialize();
    for (int i = 0; i < transitionSelectionWheelListItems.getNumberOfDrawables(); i++)
    {
        transitionSelectionWheelListItems[i].initialize();
    }
    animationSpeedButton.initialize();
}

void bottombarContainerBase::animationSpeedButtonButtonPressedCallbackHandler(bool value)
{
    //animationSpeedPressed
    //When animationSpeedButton buttonPressed emit animaitonSpeedPressed callback
    //Emit callback
    emitAnimaitonSpeedPressedCallback(value);
}

void bottombarContainerBase::animateArrow(SlideMenu::State value)
{

}

void bottombarContainerBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &transitionSelectionWheelListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        transitionItem* cc = (transitionItem*)d;
        transitionSelectionWheelUpdateItem(*cc, itemIndex);
    }
}

