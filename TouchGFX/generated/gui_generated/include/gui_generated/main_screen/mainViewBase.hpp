/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/mainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/SlideMenu.hpp>
#include <gui/containers/bottombarContainer.hpp>
#include <gui/containers/topbarContainer.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include "gui/common/structs.hpp"

class mainViewBase : public touchgfx::View<mainPresenter>
{
public:
    mainViewBase();
    virtual ~mainViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void startTransitionPressed();
    virtual void getTransitionInfo(TransitionInfo* value);
    virtual void scrollWheelPressed();
    virtual void scrollWheelAnimationEnded();
    virtual void sliderMenuStateChanged(SlideMenu::State value);
    virtual void ChromARTPressed(bool value);
    virtual void animationSpeedButtonPressed(bool value);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box backgroundBox;
    touchgfx::Image background;
    touchgfx::SlideMenu transitionMenu;
    bottombarContainer bottombar;
    topbarContainer topbar;
    touchgfx::FadeAnimator< touchgfx::TextArea > selectedTransitionText;
    touchgfx::FadeAnimator< touchgfx::Button > startTransitionButton;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<mainViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<mainViewBase, const touchgfx::SlideMenu&> slideMenuStateChangedCallback;
    touchgfx::Callback<mainViewBase, TransitionInfo*> bottombarGetTransitionInfoCallback;
    touchgfx::Callback<mainViewBase> bottombarScrollWheelPressedCallback;
    touchgfx::Callback<mainViewBase> bottombarScrollWheelAnimationEndedCallback;
    touchgfx::Callback<mainViewBase, bool> topbarChromARTStateChangedTriggerCallback;
    touchgfx::Callback<mainViewBase, bool> bottombarAnimaitonSpeedPressedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void slideMenuStateChangedCallbackHandler(const touchgfx::SlideMenu& src);
    void bottombarGetTransitionInfoCallbackHandler(TransitionInfo* value);
    void bottombarScrollWheelPressedCallbackHandler();
    void bottombarScrollWheelAnimationEndedCallbackHandler();
    void topbarChromARTStateChangedTriggerCallbackHandler(bool value);
    void bottombarAnimaitonSpeedPressedCallbackHandler(bool value);

};

#endif // MAINVIEWBASE_HPP
