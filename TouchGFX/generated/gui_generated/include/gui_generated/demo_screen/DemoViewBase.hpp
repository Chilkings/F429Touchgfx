/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DEMOVIEWBASE_HPP
#define DEMOVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/demo_screen/DemoPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/Button.hpp>

class DemoViewBase : public touchgfx::View<DemoPresenter>
{
public:
    DemoViewBase();
    virtual ~DemoViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void buttonClicked()
    {
        // Override and implement this function in Demo
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    touchgfx::TextAreaWithOneWildcard hw_input_value;
    touchgfx::TextArea hw_input;
    touchgfx::ButtonWithLabel hw_output;
    touchgfx::Button arrow_left;
    touchgfx::Button arrow_right;

    /*
     * Wildcard Buffers
     */
    static const uint16_t HW_INPUT_VALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar hw_input_valueBuffer[HW_INPUT_VALUE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DemoViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // DEMOVIEWBASE_HPP
